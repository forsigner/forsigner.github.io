{"version":3,"sources":["webpack:///./docs/tutorial.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className"],"mappings":"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","file":"static/js/docs-tutorial.4104e033.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"5分钟教程\"}}>{`5分钟教程`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"setup\"}}>{`Setup`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"state-management\"}}>{`State Management`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"routing\"}}>{`Routing`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"http\"}}>{`Http`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"快速开始\"}}>{`快速开始`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在本指南中，我们将简要介绍 Dahlia 如何通过 GraphQL 来快速请求数据，Dahlia 是对 GraphQL 深度支持的，所以本 \b 示例选择使用 GraphQL 不是 Restful 来演示。如果你想找到使用 Restful 的方式来获取数据，请看 \b Dahlia 的进阶使用。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"安装\"}}>{`安装`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`推荐使用 yarn 安装`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`yarn add dahlia\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`国内用户可以用淘宝镜像，先设置 alias:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`alias tyarn=\"yarn --registry https://registry.npm.taobao.org\"\ntyarn add dahlia\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"初始化\"}}>{`初始化`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`初始化 GraphQL 的 endpoint，推荐在入口文件初始化，这里为什么不使用 Provider 的方式来初始化，因为 endpoint 这些配置 \b 跟子组件并没有关系，所以没必要，使用 `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`\"Programmatically\"`}</MDXTag>{` 的方式初始化会更清晰。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import dahlia from 'dahlia'\n\ndahlia.init({\n  graphql: {\n    endpoint: 'https://graphql-compose.herokuapp.com/user',\n  },\n})\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"获取数据\"}}>{`获取数据`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`初始化 Dahlia 后，你可以通过一个叫 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useQuery`}</MDXTag>{` 的 hooks 获取数据了，完整的代码可以看 \"TODO:\"。这样快速的获取并且使用服务端数据，如果你使用过 Apollo-react 或者 relay，你会很熟悉，不过他们使用的 render props，Dahlia 使用 hooks ，使用 hooks 代码更加清晰简洁。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { gql, useQuery } from './dahlia'\n\nconst GET_USER = gql\\`\n  {\n    userById(_id: \"57bb44dd21d2befb7ca3f010\") {\n      name\n      gender\n      age\n    }\n  }\n\\`\n\nconst App = () => {\n  const { loading, data, error } = useQuery(GET_USER)\n\n  if (loading) return <div>loading...</div>\n  if (error) return <div>Error!</div>\n\n  return (\n    <div className=\"App\">\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  )\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`TODO:，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useQuery`}</MDXTag>{`完整 Api 和 使用方法，可以看 “TODO:”`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`如果你使用 Restful 和服务端进行交互，你可以通过 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useFetch`}</MDXTag>{` 进行类似的操作，同样可以快去获取服务端数据。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"下一步\"}}>{`下一步`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`TODO:`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"graphql\"}}>{`GraphQL`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}