{"version":3,"sources":["webpack:///./docs/advanced.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","src","width","align","parentName","className"],"mappings":"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","file":"static/js/docs-advanced.c2da22d6.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"进阶\"}}>{`进阶`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"获取数据\\bgraphql\"}}>{`获取数据(\bGraphql)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"获取数据\\brest\"}}>{`获取数据(\bRest)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"状态管理\"}}>{`状态管理`}</MDXTag>\n<img src=\"http://forsigner.com/images/dahlia/dahlia-stamen.svg\" width=\"100%\"  align=\"center\"/>\n<MDXTag name=\"p\" components={components}>{`随着应用的复杂度上升，你需要一个状态管理工具统一组织和管理应用的各种状态，Dahlia 内置了状态管理工具，不需要再 Redux 或者 MobX 等状态管理工具。为什么不直接使用 Redux 或者 MobX 呢？最大的原因是它们对 TypeScript 的支持不够完美，其次是他们不支持 React Hooks。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`让我们来看看怎么使用 Dahlia 进行状态管理，下面这段代码几乎涵盖了 Dahlia 状态管理的所有用法：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`createStore`}</MDXTag>{` —— 如何定义一个 store？`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`reducers`}</MDXTag>{` —— 如何使用同步 action？`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`effects`}</MDXTag>{` —— 如何使用异步 action？`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useStore`}</MDXTag>{` —— 如何读取 store 里的 state？`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`dispatch`}</MDXTag>{` —— 如何触发一个 action？`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'stamen'\n\nconst counterStore = createStore({\n  state: {\n    count: 10,\n  },\n  reducers: {\n    increment(state) {\n      state.count++\n    },\n    decrement(state) {\n      state.count--\n    },\n  },\n  effects: {\n    async asyncIncrement() {\n      await new Promise(resolve => {\n        setTimeout(() => {\n          resolve()\n        }, 1000)\n      })\n      counterStore.dispatch(A => A.increment)\n    },\n  },\n})\n\nconst App = () => {\n  const count = counterStore.useStore(S => S.count)\n  return (\n    <div>\n      <span>{count}</span>\n      <button onClick={() => dispatch(A => A.decrement)}>-</button>\n      <button onClick={() => dispatch(A => A.increment)}>+</button>\n      <button onClick={() => dispatch(A => A.asyncIncrement)}>async+</button>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"query-和-\\b-状态管理\"}}>{`query 和 \b 状态管理`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"fetch-和-\\b-状态管理\"}}>{`fetch 和 \b 状态管理`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"\\bdispatch\"}}>{`\bdispatch`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"\\b-副作用effects\"}}>{`\b 副作用(Effects)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"\\b-选择器\"}}>{`\b 选择器`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"mock-数据\"}}>{`Mock 数据`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"缓存\"}}>{`缓存`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Coming..`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}