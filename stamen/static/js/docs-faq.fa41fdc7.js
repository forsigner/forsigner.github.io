(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./docs/faq.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function m(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}n.default=function(e){var n=e.components;m(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"faq"}},"FAQ"),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"Compare to Redux and Mobx")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Just another choice..."),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"Support Typescript?")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Yes, it is total type-safety."),o.a.createElement(r.MDXTag,{name:"p",components:n},"key typings:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"declare function createStore<T>(state: T): {\n    consume<S>(selector: (state: T) => S, renderFn?: ((partialState: S) => React.ReactNode) | undefined): JSX.Element;\n    mutate: (fn: (draft: T) => void) => void;\n    getState: () => T;\n};\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"Single store or \x1bMultiple store?")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Personally, I would recommend a multi-part solution. More flexible and less Potential performance issues."),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"Can I use HOCs?")),o.a.createElement(r.MDXTag,{name:"p",components:n},"No, You don't need it at all. Maybe you are used to using a HOC(like connect, inject) in Redux or Mobx, to get some state or action method in lifecycles. In Stamen, You can access state by ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"getState()")," and actions in lifecycles directly."))}}}]);